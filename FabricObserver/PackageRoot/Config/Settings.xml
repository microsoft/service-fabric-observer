<?xml version="1.0" encoding="utf-8" ?>
<Settings xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/2011/01/fabric">
  <Section Name="ObserverManagerConfiguration">
    <!-- Required: Amount of time, in seconds, to sleep before the next iteration of observers run loop. 
         0 means run continuously with no pausing... 
         Keep in mind that SF Error/Warning Reports have TTLs that are computed in part with this value... -->
    <Parameter Name="ObserverLoopSleepTimeSeconds" Value="0" />
    <!-- Required: Amount of time, in seconds, any observer is allowed to complete a run. If this time is exceeded, 
         then the offending observer will be marked as broken and will not run again... -->
    <Parameter Name="ObserverExecutionTimeout" Value="600" />
    <Parameter Name="ObserverShutdownGracePeriodInSeconds" Value="1" />
    <!-- Required: Location on disk to store observer data, including ObserverManager. 
         Each observer will write to their own directory on this path...-->
    <Parameter Name="ObserverLogPath" Value="C:\observer_logs" />
    <!-- Optional: Location on disk to store CSV files that contain all observer monitoring data. -->
    <Parameter Name="DataLogPath" Value="C:\observer_logs\fabric_observer_data" />
    <!-- Enabling this will generate noisy logs. Disabling it means only Warning and Error information 
         will be locally logged. This is the recommended setting. -->
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <!-- Optional: Enabling this will generate CSV files that contain long-running resourcce metric data across observers... --> 
    <Parameter Name="EnableLongRunningCSVLogging" Value="False"/>
    <!-- Optional: This is for use by the text logger to build node warning/error hyperlinks 
         that FabricObserverWebApi uses in html output. The API does not communicate directly with FabricObserver.
         It relies on the existence of local log files, across ObserverManager and individual observers (they log to their own folders)... 
         This only makes sense if you enable secure (SSL) communication in FabricObserverWebApi. By default, it is an internal(node)-only 
         API service.-->
    <Parameter Name="FQDN" Value=""/>
    <!-- Optional: Diagnostic Telemetry. ApplicationInsights support is already implemented., 
         but you can implement whatever provider you want. See IObserverTelemetry interface. -->
    <Parameter Name="EnableTelemetryProvider" Value="False" />
    <Parameter Name="AppInsightsInstrumentationKey" Value="[your appinsights instrumentation key]" />
    <!-- Optional: EventSource Tracing. -->
    <Parameter Name="EnableEventSourceProvider" Value="True" />
    <Parameter Name="EventSourceProviderName" Value="FabricObserverETWProvider" />
  </Section>
  <!-- Observer Configuration Settings -->
  <Section Name="AppObserverConfiguration">
    <!-- Required Parameter for all Observers -->
    <Parameter Name="Enabled" Value="True" />
    <!-- Required: Enabling this will generate noisy logs. Disabling it means only Warning and Error information 
         will be locally logged. This is the recommended setting. -->
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <!-- Required: The thresholds are held in a json file... Note that these thresholds apply to any service that is part 
         of the Target Application, which is the logical container for service processes in Service Fabric parlance...-->
    <Parameter Name="AppObserverDataFileName" Value="AppObserver.config.json" />
  </Section>
  <Section Name="CertificateObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <!-- Default is 42 -->
    <Parameter Name="DaysUntilClusterExpiryWarningThreshold" Value="42" />
    <Parameter Name="DaysUntilAppExpiryWarningThreshold" Value="42" />
    <!-- Required: These are JSON-style lists of strings, empty should be "[]", full should be "['thumb1', 'thumb2']" -->
    <Parameter Name="AppCertThumbprintsToObserve" Value="[]"/>
    <Parameter Name="AppCertCommonNamesToObserve" Value="[]"/>
  </Section>
  <Section Name="DiskObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <!-- For all Observers where thresholds are housed in this settings file 
         you can either omit them or set values to "" or "0" if you don't need them.
         They are all in place here for your reference. -->
    <Parameter Name="DiskSpacePercentWarningThreshold" Value="80" />
    <Parameter Name="DiskSpacePercentErrorThreshold" Value="" />
    <Parameter Name="AverageQueueLengthErrorThreshold" Value ="" />
    <Parameter Name="AverageQueueLengthWarningThreshold" Value ="8" />
    <!-- These may or may not be useful to you. Depends on your IO-bound workload... -->
    <Parameter Name="IOReadsErrorThreshold" Value="" />
    <Parameter Name="IOReadsWarningThreshold" Value="" />
    <Parameter Name="IOWritesErrorThreshold" Value="" />
    <Parameter Name="IOWritesWarningThreshold" Value="" />
  </Section>
  <!-- Only enable FabricSystemObserver after you get a sense of what impact your services have on the SF runtime... 
       This is very important because there is no "one threshold fits all" across warning/error thresholds for any of the SF system services. 
       That is, we do not have a fixed set of guaranteed problematic thresholds for SF infrastructure services. 
       Again, it is best to not Enable this observer until you have done some experimentation with monitoring how your service code impacts 
       Service Fabric system services. Otherwise, you may end up generating noise and creating support tickets when there is in fact nothing wrong with
       SF, but that your service code is just stressing SF componentry. This is of course useful to know, but FabricSystemObserver can't tell you that
       your code is the problem... -->
  <Section Name="FabricSystemObserverConfiguration">
    <Parameter Name="Enabled" Value="False" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <!-- Optional: SF Event Log can be noisy and full of non-error errors..., 
         so it's recommended that you only enable this for debugging purposes...-->
    <Parameter Name="MonitorWindowsEventLog" Value="False" />
    <Parameter Name="ErrorCpuThresholdPercent" Value="" />
    <Parameter Name="WarnCpuThresholdPercent" Value="80" />
    <Parameter Name="ErrorMemoryThresholdMB" Value="" />
    <Parameter Name="WarnMemoryThresholdMB" Value="1024" />
    <Parameter Name="ErrorDiskIOReadsThreshold" Value="" />
    <Parameter Name="WarnDiskIOReadsThreshold" Value="" />
    <Parameter Name="ErrorDiskIOWritesThreshold" Value="" />
    <Parameter Name="WarnDiskIOWritesThreshold" Value="" />
    <Parameter Name="PercentUnhealthyNodesWarnThreshold" Value="" />
    <Parameter Name="PercentUnhealthyNodesErrorThreshold" Value="" />
  </Section>
  <Section Name="NetworkObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <!-- The target endpoints, which are the only endpoints that matter (default endpoints do not generate warnings...)
         are App-level configuration settings and will apply to any service that is part of the Application...
         These values are held in a json file, NetworkObserver.config.json".-->
    <Parameter Name="NetworkObserverDataFileName" Value="NetworkObserver.config.json" />
  </Section>
  <Section Name="NodeObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
    <Parameter Name="CpuErrorLimitPercent" Value="" />
    <Parameter Name="CpuWarningLimitPercent" Value="90" />
    <Parameter Name="MemoryErrorLimitMB" Value="" />
    <Parameter Name="MemoryWarningLimitMB" Value ="" />
    <Parameter Name="MemoryErrorLimitPercent" Value="" />
    <Parameter Name="MemoryWarningLimitPercent" Value ="90" />
    <Parameter Name="NetworkErrorActivePorts" Value="" />
    <Parameter Name="NetworkWarningActivePorts" Value="55000" />
    <Parameter Name="NetworkErrorFirewallRules" Value="" />
    <Parameter Name="NetworkWarningFirewallRules" Value="2500" />
    <Parameter Name="NetworkErrorEphemeralPorts" Value="" />
    <Parameter Name="NetworkWarningEphemeralPorts" Value="5000" />
  </Section>
  <!-- *** It is highly recommended that you do not disable the following observers ***-->
  <Section Name="OSObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
  </Section>
  <Section Name="SFConfigurationObserverConfiguration">
    <Parameter Name="Enabled" Value="True" />
    <Parameter Name="EnableVerboseLogging" Value="False" />
  </Section>
</Settings>
